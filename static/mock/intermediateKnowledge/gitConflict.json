{
  "ret": true,
  "articleList": [{
    "id": 1,
    "titleList": "强制拉取某一版本下的代码",
    "questions": {
      "question": "置顶：拽取某一版本下的代码。",
      "answer": [{
        "answer": "这里是一个置顶回答，因为遇到一个实用性比较大的git方法",
        "explanation": "点击链接：<a style='color:red;' href='https://blog.csdn.net/liangfeng093/article/details/79199548' target='_blank'>获取项目某一版本的全部代码，不用回退版本",
        "url": "",
        "ImgExplanation": ""
      }]
    }
  }, {
    "id": 2,
    "titleList": "git冲突",
    "questions": {
      "question": "当本地开发与线上环境代码冲突时如何解决？",
      "answer": [{
        "answer": "1.选择本地代码强制覆盖，放弃pull下来的代码",
        "explanation": "使用如下的三个命令",
        "url": "",
        "ImgExplanation": " git stash<br>git pull origin master<br>git stash pop"
      }, {
        "answer": "2.选择放弃本地修改，回退至上一版本",
        "explanation": "使用如下两个命令",
        "url": "",
        "ImgExplanation": "git reset --hard<br>git pull origin master"
      }]
    }
  }, {
    "id": 3,
    "titleList": "git分支",
    "questions": {
      "question": "在开发项目中，如何使用分支合并维护项目？",
      "answer": [{
        "answer": "1.项目中创建分支(参考git命令或代码管理网站直接创建：如码云)",
        "explanation": "通过使用<span class='K_W'>git branch 项目名</span>创建新分支，如果是网站新建分支，需要及时的<span class='K_W'>git pull</span>下来,并且需要转移（<span class='K_W'>git checkout 分支名</span>)到新分支上进行开发。<br>缩减写法<span class='K_W'>git checkout -b 分支名</span>创建并切换分支",
        "url": "",
        "ImgExplanation": "当我们开发完成后，提交代码合并分支：<span class='K_W'>git merge 'branch'</span>到主分支,随后切换为主分支。<span class='K_W'>git&nbsp;push</span>进行提交。"
      }]
    }
  }]
}
